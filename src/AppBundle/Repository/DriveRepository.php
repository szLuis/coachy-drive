<?php

namespace AppBundle\Repository;
use Symfony\Component\HttpFoundation\JsonResponse;

/**
 * DriveRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DriveRepository extends \Doctrine\ORM\EntityRepository
{
    public function getFileDirectoryJSON()
    {
        $parentItems = $this->getParentItems();
        $fileDirectory = $this->getFileDirectory($parentItems);
        $fileDirectory = array("id" => 0,"icon" => "folder", "title" => "My drive", 
        "dateCreated" =>  "2018-06-15","detailsLink"=>  "#", "star"=>  false, "deleted"=>  false,
        "hasChildren"=> true, "children"=>  $fileDirectory);

	    return  new JsonResponse([$fileDirectory], 200, array('content-type' => 'text/json', 'Access-Control-Allow-Origin' => '*')) ;

    }
    public function getParentItems()
    {
        $em = $this->getEntityManager();
        // $query  = $em->createQuery("SELECT partial d.{id, icon, title, dateCreated, linkDetails, star, deleted, hasChildren, children}
        //                         FROM AppBundle:Drive d 
        //                         WHERE d.parent=1");
        // $parentItems = $query->getArrayResult();
        // return $parentItems;
        $queryBuilder = $em->createQueryBuilder();
        $queryBuilder->select('d')
                     ->from('AppBundle:Drive', 'd')
                     ->where('d.parent=1');
        $parentItems = $queryBuilder->getQuery();
        $resultparentItemsArray = $parentItems->getArrayResult();
        foreach ($resultparentItemsArray as &$parentItem) {
            $dateCreated = $parentItem["dateCreated"]->format('Y-m-d');
            $parentItem["dateCreated"]=$dateCreated ;
        }
        return $resultparentItemsArray;
    }

    public function getItem($itemId)
    {
        $em = $this->getEntityManager();
        
        $queryBuilder = $em->createQueryBuilder();
        $queryBuilder->select('d')
                     ->from('AppBundle:Drive', 'd')
                     ->where('d.id= :itemId')
                     ->setParameters(array('itemId'=>$itemId));
        $item = $queryBuilder->getQuery();
        $resultItem = $item->getArrayResult();
        $dateCreated=$resultItem[0]["dateCreated"]->format('Y-m-d');
        $resultItem[0]["dateCreated"] = $dateCreated;
        return $resultItem;
    }

    public function getFileDirectory(&$parentItems)
    {
        $parents = array();
        foreach ($parentItems as $key => $value)
        {
            $children = array();
            if ($parentItems[$key]['hasChildren']===true) {
                foreach ($parentItems[$key]['children'] as $child) {
                    $parents = $this->getItem($child);
                    \array_push($children, $parents[0]);                    
                }
                $parentItems[$key]['children'] = $children;
                $this->getFileDirectory($parentItems[$key]['children']);
            }
        }
        return $parentItems;
    }
}
